# git tag stg-build-X -> build docker image
# git tag stg-deploy-X -> build image & deploy on GKE
name: 'Staging CD'
on:
  push:
    tags:
      - 'stg-build-*'
      # TODO helm deployment
      #- 'stg-deploy-*'

env:
  APP: 'invenio'
  IMAGE: 'moodle'
  PROJECT_ID: 'cca-web-staging'
  REGISTRY: 'us-west2-docker.pkg.dev'
  REPOSITORY: 'docker-web'
  SERVICE_ACCOUNT: 'invenio-gh-actions@cca-web-staging.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/316944295291/locations/global/workloadIdentityPools/github/providers/invenio'
  # ! below will be used in the k8s deploy steps
  CLUSTER_LOCATION: 'us-west1-b'
  CLUSTER_NAME: 'ccaedu-stg'
  KUBERNETES_NAMESPACE_OVERWRITE: 'invenio-dev'

jobs:
  build:
    name: Setup, Build, and Push Docker image to Artifact Registry
    runs-on: ubuntu-latest
    environment: staging

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      # Configure Workload Identity Federation and generate an access token.
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.10
        with:
          create_credentials_file: true # Important for Docker auth
          project_id: ${{ env.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          token_format: access_token # Explicitly request OAuth token
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      # Configure Docker to use the gcloud credentials
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.4

      # This step is necessary too, google-github-actions/auth is not enough
      - name: Configure Docker to use GCloud auth
        run: gcloud auth configure-docker ${{ env.REGISTRY }}

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        uses: docker/login-action@v3.4.0
        with:
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.auth_token }}
          registry: ${{ env.REGISTRY }}

      # Unique Docker tag like stg-deploy-20-abcd123
      - name: Generate tags
        id: tag
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          if [ "${{ github.ref_type }}" = "tag" ]; then
            VERSION="${{ github.ref_name }}-${SHORT_SHA}"
          else
            VERSION="${SHORT_SHA}"
          fi
          echo "tag=${VERSION}" >> $GITHUB_OUTPUT
        shell: bash

      # From https://docs.docker.com/build/ci/github-actions/cache/
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Build and push
        uses: docker/build-push-action@v6.18.0
        with:
          cache-to: type=inline
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:latest
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ steps.tag.outputs.tag }}
          push: true
